name: Build Super Antenna

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: super-antenna
            asset_name: super-antenna-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: super-antenna.exe
            asset_name: super-antenna-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: super-antenna
            asset_name: super-antenna-macos-amd64

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --target ${{ matrix.target }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        if-no-files-found: error
        retention-days: 5

  # Optional job to create a release when a tag is pushed
  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts/
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/super-antenna-linux-amd64/super-antenna
            artifacts/super-antenna-windows-amd64.exe/super-antenna.exe
            artifacts/super-antenna-macos-amd64/super-antenna
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 